// Code generated by protoc-gen-go-pulsar. DO NOT EDIT.
package bundlesv1beta1

import (
	fmt "fmt"
	runtime "github.com/cosmos/cosmos-proto/runtime"
	_ "github.com/cosmos/gogoproto/gogoproto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoiface "google.golang.org/protobuf/runtime/protoiface"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	io "io"
	reflect "reflect"
	sync "sync"
)

var _ protoreflect.List = (*_BundleProposal_11_list)(nil)

type _BundleProposal_11_list struct {
	list *[]string
}

func (x *_BundleProposal_11_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_BundleProposal_11_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_BundleProposal_11_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_BundleProposal_11_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_BundleProposal_11_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message BundleProposal at list field VotersValid as it is not of Message kind"))
}

func (x *_BundleProposal_11_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_BundleProposal_11_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_BundleProposal_11_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_BundleProposal_12_list)(nil)

type _BundleProposal_12_list struct {
	list *[]string
}

func (x *_BundleProposal_12_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_BundleProposal_12_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_BundleProposal_12_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_BundleProposal_12_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_BundleProposal_12_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message BundleProposal at list field VotersInvalid as it is not of Message kind"))
}

func (x *_BundleProposal_12_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_BundleProposal_12_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_BundleProposal_12_list) IsValid() bool {
	return x.list != nil
}

var _ protoreflect.List = (*_BundleProposal_13_list)(nil)

type _BundleProposal_13_list struct {
	list *[]string
}

func (x *_BundleProposal_13_list) Len() int {
	if x.list == nil {
		return 0
	}
	return len(*x.list)
}

func (x *_BundleProposal_13_list) Get(i int) protoreflect.Value {
	return protoreflect.ValueOfString((*x.list)[i])
}

func (x *_BundleProposal_13_list) Set(i int, value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	(*x.list)[i] = concreteValue
}

func (x *_BundleProposal_13_list) Append(value protoreflect.Value) {
	valueUnwrapped := value.String()
	concreteValue := valueUnwrapped
	*x.list = append(*x.list, concreteValue)
}

func (x *_BundleProposal_13_list) AppendMutable() protoreflect.Value {
	panic(fmt.Errorf("AppendMutable can not be called on message BundleProposal at list field VotersAbstain as it is not of Message kind"))
}

func (x *_BundleProposal_13_list) Truncate(n int) {
	*x.list = (*x.list)[:n]
}

func (x *_BundleProposal_13_list) NewElement() protoreflect.Value {
	v := ""
	return protoreflect.ValueOfString(v)
}

func (x *_BundleProposal_13_list) IsValid() bool {
	return x.list != nil
}

var (
	md_BundleProposal                     protoreflect.MessageDescriptor
	fd_BundleProposal_pool_id             protoreflect.FieldDescriptor
	fd_BundleProposal_storage_id          protoreflect.FieldDescriptor
	fd_BundleProposal_uploader            protoreflect.FieldDescriptor
	fd_BundleProposal_next_uploader       protoreflect.FieldDescriptor
	fd_BundleProposal_data_size           protoreflect.FieldDescriptor
	fd_BundleProposal_bundle_size         protoreflect.FieldDescriptor
	fd_BundleProposal_to_key              protoreflect.FieldDescriptor
	fd_BundleProposal_bundle_summary      protoreflect.FieldDescriptor
	fd_BundleProposal_data_hash           protoreflect.FieldDescriptor
	fd_BundleProposal_updated_at          protoreflect.FieldDescriptor
	fd_BundleProposal_voters_valid        protoreflect.FieldDescriptor
	fd_BundleProposal_voters_invalid      protoreflect.FieldDescriptor
	fd_BundleProposal_voters_abstain      protoreflect.FieldDescriptor
	fd_BundleProposal_from_key            protoreflect.FieldDescriptor
	fd_BundleProposal_storage_provider_id protoreflect.FieldDescriptor
	fd_BundleProposal_compression_id      protoreflect.FieldDescriptor
)

func init() {
	file_kyve_bundles_v1beta1_bundles_proto_init()
	md_BundleProposal = File_kyve_bundles_v1beta1_bundles_proto.Messages().ByName("BundleProposal")
	fd_BundleProposal_pool_id = md_BundleProposal.Fields().ByName("pool_id")
	fd_BundleProposal_storage_id = md_BundleProposal.Fields().ByName("storage_id")
	fd_BundleProposal_uploader = md_BundleProposal.Fields().ByName("uploader")
	fd_BundleProposal_next_uploader = md_BundleProposal.Fields().ByName("next_uploader")
	fd_BundleProposal_data_size = md_BundleProposal.Fields().ByName("data_size")
	fd_BundleProposal_bundle_size = md_BundleProposal.Fields().ByName("bundle_size")
	fd_BundleProposal_to_key = md_BundleProposal.Fields().ByName("to_key")
	fd_BundleProposal_bundle_summary = md_BundleProposal.Fields().ByName("bundle_summary")
	fd_BundleProposal_data_hash = md_BundleProposal.Fields().ByName("data_hash")
	fd_BundleProposal_updated_at = md_BundleProposal.Fields().ByName("updated_at")
	fd_BundleProposal_voters_valid = md_BundleProposal.Fields().ByName("voters_valid")
	fd_BundleProposal_voters_invalid = md_BundleProposal.Fields().ByName("voters_invalid")
	fd_BundleProposal_voters_abstain = md_BundleProposal.Fields().ByName("voters_abstain")
	fd_BundleProposal_from_key = md_BundleProposal.Fields().ByName("from_key")
	fd_BundleProposal_storage_provider_id = md_BundleProposal.Fields().ByName("storage_provider_id")
	fd_BundleProposal_compression_id = md_BundleProposal.Fields().ByName("compression_id")
}

var _ protoreflect.Message = (*fastReflection_BundleProposal)(nil)

type fastReflection_BundleProposal BundleProposal

func (x *BundleProposal) ProtoReflect() protoreflect.Message {
	return (*fastReflection_BundleProposal)(x)
}

func (x *BundleProposal) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_bundles_v1beta1_bundles_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_BundleProposal_messageType fastReflection_BundleProposal_messageType
var _ protoreflect.MessageType = fastReflection_BundleProposal_messageType{}

type fastReflection_BundleProposal_messageType struct{}

func (x fastReflection_BundleProposal_messageType) Zero() protoreflect.Message {
	return (*fastReflection_BundleProposal)(nil)
}
func (x fastReflection_BundleProposal_messageType) New() protoreflect.Message {
	return new(fastReflection_BundleProposal)
}
func (x fastReflection_BundleProposal_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_BundleProposal
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_BundleProposal) Descriptor() protoreflect.MessageDescriptor {
	return md_BundleProposal
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_BundleProposal) Type() protoreflect.MessageType {
	return _fastReflection_BundleProposal_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_BundleProposal) New() protoreflect.Message {
	return new(fastReflection_BundleProposal)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_BundleProposal) Interface() protoreflect.ProtoMessage {
	return (*BundleProposal)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_BundleProposal) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_BundleProposal_pool_id, value) {
			return
		}
	}
	if x.StorageId != "" {
		value := protoreflect.ValueOfString(x.StorageId)
		if !f(fd_BundleProposal_storage_id, value) {
			return
		}
	}
	if x.Uploader != "" {
		value := protoreflect.ValueOfString(x.Uploader)
		if !f(fd_BundleProposal_uploader, value) {
			return
		}
	}
	if x.NextUploader != "" {
		value := protoreflect.ValueOfString(x.NextUploader)
		if !f(fd_BundleProposal_next_uploader, value) {
			return
		}
	}
	if x.DataSize != uint64(0) {
		value := protoreflect.ValueOfUint64(x.DataSize)
		if !f(fd_BundleProposal_data_size, value) {
			return
		}
	}
	if x.BundleSize != uint64(0) {
		value := protoreflect.ValueOfUint64(x.BundleSize)
		if !f(fd_BundleProposal_bundle_size, value) {
			return
		}
	}
	if x.ToKey != "" {
		value := protoreflect.ValueOfString(x.ToKey)
		if !f(fd_BundleProposal_to_key, value) {
			return
		}
	}
	if x.BundleSummary != "" {
		value := protoreflect.ValueOfString(x.BundleSummary)
		if !f(fd_BundleProposal_bundle_summary, value) {
			return
		}
	}
	if x.DataHash != "" {
		value := protoreflect.ValueOfString(x.DataHash)
		if !f(fd_BundleProposal_data_hash, value) {
			return
		}
	}
	if x.UpdatedAt != uint64(0) {
		value := protoreflect.ValueOfUint64(x.UpdatedAt)
		if !f(fd_BundleProposal_updated_at, value) {
			return
		}
	}
	if len(x.VotersValid) != 0 {
		value := protoreflect.ValueOfList(&_BundleProposal_11_list{list: &x.VotersValid})
		if !f(fd_BundleProposal_voters_valid, value) {
			return
		}
	}
	if len(x.VotersInvalid) != 0 {
		value := protoreflect.ValueOfList(&_BundleProposal_12_list{list: &x.VotersInvalid})
		if !f(fd_BundleProposal_voters_invalid, value) {
			return
		}
	}
	if len(x.VotersAbstain) != 0 {
		value := protoreflect.ValueOfList(&_BundleProposal_13_list{list: &x.VotersAbstain})
		if !f(fd_BundleProposal_voters_abstain, value) {
			return
		}
	}
	if x.FromKey != "" {
		value := protoreflect.ValueOfString(x.FromKey)
		if !f(fd_BundleProposal_from_key, value) {
			return
		}
	}
	if x.StorageProviderId != uint32(0) {
		value := protoreflect.ValueOfUint32(x.StorageProviderId)
		if !f(fd_BundleProposal_storage_provider_id, value) {
			return
		}
	}
	if x.CompressionId != uint32(0) {
		value := protoreflect.ValueOfUint32(x.CompressionId)
		if !f(fd_BundleProposal_compression_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_BundleProposal) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.BundleProposal.pool_id":
		return x.PoolId != uint64(0)
	case "kyve.bundles.v1beta1.BundleProposal.storage_id":
		return x.StorageId != ""
	case "kyve.bundles.v1beta1.BundleProposal.uploader":
		return x.Uploader != ""
	case "kyve.bundles.v1beta1.BundleProposal.next_uploader":
		return x.NextUploader != ""
	case "kyve.bundles.v1beta1.BundleProposal.data_size":
		return x.DataSize != uint64(0)
	case "kyve.bundles.v1beta1.BundleProposal.bundle_size":
		return x.BundleSize != uint64(0)
	case "kyve.bundles.v1beta1.BundleProposal.to_key":
		return x.ToKey != ""
	case "kyve.bundles.v1beta1.BundleProposal.bundle_summary":
		return x.BundleSummary != ""
	case "kyve.bundles.v1beta1.BundleProposal.data_hash":
		return x.DataHash != ""
	case "kyve.bundles.v1beta1.BundleProposal.updated_at":
		return x.UpdatedAt != uint64(0)
	case "kyve.bundles.v1beta1.BundleProposal.voters_valid":
		return len(x.VotersValid) != 0
	case "kyve.bundles.v1beta1.BundleProposal.voters_invalid":
		return len(x.VotersInvalid) != 0
	case "kyve.bundles.v1beta1.BundleProposal.voters_abstain":
		return len(x.VotersAbstain) != 0
	case "kyve.bundles.v1beta1.BundleProposal.from_key":
		return x.FromKey != ""
	case "kyve.bundles.v1beta1.BundleProposal.storage_provider_id":
		return x.StorageProviderId != uint32(0)
	case "kyve.bundles.v1beta1.BundleProposal.compression_id":
		return x.CompressionId != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.BundleProposal"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.BundleProposal does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BundleProposal) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.BundleProposal.pool_id":
		x.PoolId = uint64(0)
	case "kyve.bundles.v1beta1.BundleProposal.storage_id":
		x.StorageId = ""
	case "kyve.bundles.v1beta1.BundleProposal.uploader":
		x.Uploader = ""
	case "kyve.bundles.v1beta1.BundleProposal.next_uploader":
		x.NextUploader = ""
	case "kyve.bundles.v1beta1.BundleProposal.data_size":
		x.DataSize = uint64(0)
	case "kyve.bundles.v1beta1.BundleProposal.bundle_size":
		x.BundleSize = uint64(0)
	case "kyve.bundles.v1beta1.BundleProposal.to_key":
		x.ToKey = ""
	case "kyve.bundles.v1beta1.BundleProposal.bundle_summary":
		x.BundleSummary = ""
	case "kyve.bundles.v1beta1.BundleProposal.data_hash":
		x.DataHash = ""
	case "kyve.bundles.v1beta1.BundleProposal.updated_at":
		x.UpdatedAt = uint64(0)
	case "kyve.bundles.v1beta1.BundleProposal.voters_valid":
		x.VotersValid = nil
	case "kyve.bundles.v1beta1.BundleProposal.voters_invalid":
		x.VotersInvalid = nil
	case "kyve.bundles.v1beta1.BundleProposal.voters_abstain":
		x.VotersAbstain = nil
	case "kyve.bundles.v1beta1.BundleProposal.from_key":
		x.FromKey = ""
	case "kyve.bundles.v1beta1.BundleProposal.storage_provider_id":
		x.StorageProviderId = uint32(0)
	case "kyve.bundles.v1beta1.BundleProposal.compression_id":
		x.CompressionId = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.BundleProposal"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.BundleProposal does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_BundleProposal) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.bundles.v1beta1.BundleProposal.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.BundleProposal.storage_id":
		value := x.StorageId
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.BundleProposal.uploader":
		value := x.Uploader
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.BundleProposal.next_uploader":
		value := x.NextUploader
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.BundleProposal.data_size":
		value := x.DataSize
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.BundleProposal.bundle_size":
		value := x.BundleSize
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.BundleProposal.to_key":
		value := x.ToKey
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.BundleProposal.bundle_summary":
		value := x.BundleSummary
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.BundleProposal.data_hash":
		value := x.DataHash
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.BundleProposal.updated_at":
		value := x.UpdatedAt
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.BundleProposal.voters_valid":
		if len(x.VotersValid) == 0 {
			return protoreflect.ValueOfList(&_BundleProposal_11_list{})
		}
		listValue := &_BundleProposal_11_list{list: &x.VotersValid}
		return protoreflect.ValueOfList(listValue)
	case "kyve.bundles.v1beta1.BundleProposal.voters_invalid":
		if len(x.VotersInvalid) == 0 {
			return protoreflect.ValueOfList(&_BundleProposal_12_list{})
		}
		listValue := &_BundleProposal_12_list{list: &x.VotersInvalid}
		return protoreflect.ValueOfList(listValue)
	case "kyve.bundles.v1beta1.BundleProposal.voters_abstain":
		if len(x.VotersAbstain) == 0 {
			return protoreflect.ValueOfList(&_BundleProposal_13_list{})
		}
		listValue := &_BundleProposal_13_list{list: &x.VotersAbstain}
		return protoreflect.ValueOfList(listValue)
	case "kyve.bundles.v1beta1.BundleProposal.from_key":
		value := x.FromKey
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.BundleProposal.storage_provider_id":
		value := x.StorageProviderId
		return protoreflect.ValueOfUint32(value)
	case "kyve.bundles.v1beta1.BundleProposal.compression_id":
		value := x.CompressionId
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.BundleProposal"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.BundleProposal does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BundleProposal) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.BundleProposal.pool_id":
		x.PoolId = value.Uint()
	case "kyve.bundles.v1beta1.BundleProposal.storage_id":
		x.StorageId = value.Interface().(string)
	case "kyve.bundles.v1beta1.BundleProposal.uploader":
		x.Uploader = value.Interface().(string)
	case "kyve.bundles.v1beta1.BundleProposal.next_uploader":
		x.NextUploader = value.Interface().(string)
	case "kyve.bundles.v1beta1.BundleProposal.data_size":
		x.DataSize = value.Uint()
	case "kyve.bundles.v1beta1.BundleProposal.bundle_size":
		x.BundleSize = value.Uint()
	case "kyve.bundles.v1beta1.BundleProposal.to_key":
		x.ToKey = value.Interface().(string)
	case "kyve.bundles.v1beta1.BundleProposal.bundle_summary":
		x.BundleSummary = value.Interface().(string)
	case "kyve.bundles.v1beta1.BundleProposal.data_hash":
		x.DataHash = value.Interface().(string)
	case "kyve.bundles.v1beta1.BundleProposal.updated_at":
		x.UpdatedAt = value.Uint()
	case "kyve.bundles.v1beta1.BundleProposal.voters_valid":
		lv := value.List()
		clv := lv.(*_BundleProposal_11_list)
		x.VotersValid = *clv.list
	case "kyve.bundles.v1beta1.BundleProposal.voters_invalid":
		lv := value.List()
		clv := lv.(*_BundleProposal_12_list)
		x.VotersInvalid = *clv.list
	case "kyve.bundles.v1beta1.BundleProposal.voters_abstain":
		lv := value.List()
		clv := lv.(*_BundleProposal_13_list)
		x.VotersAbstain = *clv.list
	case "kyve.bundles.v1beta1.BundleProposal.from_key":
		x.FromKey = value.Interface().(string)
	case "kyve.bundles.v1beta1.BundleProposal.storage_provider_id":
		x.StorageProviderId = uint32(value.Uint())
	case "kyve.bundles.v1beta1.BundleProposal.compression_id":
		x.CompressionId = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.BundleProposal"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.BundleProposal does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BundleProposal) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.BundleProposal.voters_valid":
		if x.VotersValid == nil {
			x.VotersValid = []string{}
		}
		value := &_BundleProposal_11_list{list: &x.VotersValid}
		return protoreflect.ValueOfList(value)
	case "kyve.bundles.v1beta1.BundleProposal.voters_invalid":
		if x.VotersInvalid == nil {
			x.VotersInvalid = []string{}
		}
		value := &_BundleProposal_12_list{list: &x.VotersInvalid}
		return protoreflect.ValueOfList(value)
	case "kyve.bundles.v1beta1.BundleProposal.voters_abstain":
		if x.VotersAbstain == nil {
			x.VotersAbstain = []string{}
		}
		value := &_BundleProposal_13_list{list: &x.VotersAbstain}
		return protoreflect.ValueOfList(value)
	case "kyve.bundles.v1beta1.BundleProposal.pool_id":
		panic(fmt.Errorf("field pool_id of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	case "kyve.bundles.v1beta1.BundleProposal.storage_id":
		panic(fmt.Errorf("field storage_id of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	case "kyve.bundles.v1beta1.BundleProposal.uploader":
		panic(fmt.Errorf("field uploader of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	case "kyve.bundles.v1beta1.BundleProposal.next_uploader":
		panic(fmt.Errorf("field next_uploader of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	case "kyve.bundles.v1beta1.BundleProposal.data_size":
		panic(fmt.Errorf("field data_size of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	case "kyve.bundles.v1beta1.BundleProposal.bundle_size":
		panic(fmt.Errorf("field bundle_size of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	case "kyve.bundles.v1beta1.BundleProposal.to_key":
		panic(fmt.Errorf("field to_key of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	case "kyve.bundles.v1beta1.BundleProposal.bundle_summary":
		panic(fmt.Errorf("field bundle_summary of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	case "kyve.bundles.v1beta1.BundleProposal.data_hash":
		panic(fmt.Errorf("field data_hash of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	case "kyve.bundles.v1beta1.BundleProposal.updated_at":
		panic(fmt.Errorf("field updated_at of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	case "kyve.bundles.v1beta1.BundleProposal.from_key":
		panic(fmt.Errorf("field from_key of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	case "kyve.bundles.v1beta1.BundleProposal.storage_provider_id":
		panic(fmt.Errorf("field storage_provider_id of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	case "kyve.bundles.v1beta1.BundleProposal.compression_id":
		panic(fmt.Errorf("field compression_id of message kyve.bundles.v1beta1.BundleProposal is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.BundleProposal"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.BundleProposal does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_BundleProposal) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.BundleProposal.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.BundleProposal.storage_id":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.BundleProposal.uploader":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.BundleProposal.next_uploader":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.BundleProposal.data_size":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.BundleProposal.bundle_size":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.BundleProposal.to_key":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.BundleProposal.bundle_summary":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.BundleProposal.data_hash":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.BundleProposal.updated_at":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.BundleProposal.voters_valid":
		list := []string{}
		return protoreflect.ValueOfList(&_BundleProposal_11_list{list: &list})
	case "kyve.bundles.v1beta1.BundleProposal.voters_invalid":
		list := []string{}
		return protoreflect.ValueOfList(&_BundleProposal_12_list{list: &list})
	case "kyve.bundles.v1beta1.BundleProposal.voters_abstain":
		list := []string{}
		return protoreflect.ValueOfList(&_BundleProposal_13_list{list: &list})
	case "kyve.bundles.v1beta1.BundleProposal.from_key":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.BundleProposal.storage_provider_id":
		return protoreflect.ValueOfUint32(uint32(0))
	case "kyve.bundles.v1beta1.BundleProposal.compression_id":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.BundleProposal"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.BundleProposal does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_BundleProposal) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.bundles.v1beta1.BundleProposal", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_BundleProposal) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_BundleProposal) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_BundleProposal) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_BundleProposal) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*BundleProposal)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		l = len(x.StorageId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Uploader)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.NextUploader)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.DataSize != 0 {
			n += 1 + runtime.Sov(uint64(x.DataSize))
		}
		if x.BundleSize != 0 {
			n += 1 + runtime.Sov(uint64(x.BundleSize))
		}
		l = len(x.ToKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BundleSummary)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DataHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.UpdatedAt != 0 {
			n += 1 + runtime.Sov(uint64(x.UpdatedAt))
		}
		if len(x.VotersValid) > 0 {
			for _, s := range x.VotersValid {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.VotersInvalid) > 0 {
			for _, s := range x.VotersInvalid {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		if len(x.VotersAbstain) > 0 {
			for _, s := range x.VotersAbstain {
				l = len(s)
				n += 1 + l + runtime.Sov(uint64(l))
			}
		}
		l = len(x.FromKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.StorageProviderId != 0 {
			n += 1 + runtime.Sov(uint64(x.StorageProviderId))
		}
		if x.CompressionId != 0 {
			n += 2 + runtime.Sov(uint64(x.CompressionId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*BundleProposal)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CompressionId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CompressionId))
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0x80
		}
		if x.StorageProviderId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StorageProviderId))
			i--
			dAtA[i] = 0x78
		}
		if len(x.FromKey) > 0 {
			i -= len(x.FromKey)
			copy(dAtA[i:], x.FromKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FromKey)))
			i--
			dAtA[i] = 0x72
		}
		if len(x.VotersAbstain) > 0 {
			for iNdEx := len(x.VotersAbstain) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.VotersAbstain[iNdEx])
				copy(dAtA[i:], x.VotersAbstain[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VotersAbstain[iNdEx])))
				i--
				dAtA[i] = 0x6a
			}
		}
		if len(x.VotersInvalid) > 0 {
			for iNdEx := len(x.VotersInvalid) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.VotersInvalid[iNdEx])
				copy(dAtA[i:], x.VotersInvalid[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VotersInvalid[iNdEx])))
				i--
				dAtA[i] = 0x62
			}
		}
		if len(x.VotersValid) > 0 {
			for iNdEx := len(x.VotersValid) - 1; iNdEx >= 0; iNdEx-- {
				i -= len(x.VotersValid[iNdEx])
				copy(dAtA[i:], x.VotersValid[iNdEx])
				i = runtime.EncodeVarint(dAtA, i, uint64(len(x.VotersValid[iNdEx])))
				i--
				dAtA[i] = 0x5a
			}
		}
		if x.UpdatedAt != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.UpdatedAt))
			i--
			dAtA[i] = 0x50
		}
		if len(x.DataHash) > 0 {
			i -= len(x.DataHash)
			copy(dAtA[i:], x.DataHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DataHash)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.BundleSummary) > 0 {
			i -= len(x.BundleSummary)
			copy(dAtA[i:], x.BundleSummary)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BundleSummary)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.ToKey) > 0 {
			i -= len(x.ToKey)
			copy(dAtA[i:], x.ToKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ToKey)))
			i--
			dAtA[i] = 0x3a
		}
		if x.BundleSize != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.BundleSize))
			i--
			dAtA[i] = 0x30
		}
		if x.DataSize != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.DataSize))
			i--
			dAtA[i] = 0x28
		}
		if len(x.NextUploader) > 0 {
			i -= len(x.NextUploader)
			copy(dAtA[i:], x.NextUploader)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.NextUploader)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.Uploader) > 0 {
			i -= len(x.Uploader)
			copy(dAtA[i:], x.Uploader)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Uploader)))
			i--
			dAtA[i] = 0x1a
		}
		if len(x.StorageId) > 0 {
			i -= len(x.StorageId)
			copy(dAtA[i:], x.StorageId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StorageId)))
			i--
			dAtA[i] = 0x12
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*BundleProposal)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BundleProposal: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: BundleProposal: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StorageId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StorageId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Uploader", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Uploader = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field NextUploader", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.NextUploader = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DataSize", wireType)
				}
				x.DataSize = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.DataSize |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BundleSize", wireType)
				}
				x.BundleSize = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.BundleSize |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ToKey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ToKey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BundleSummary", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BundleSummary = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DataHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DataHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
				}
				x.UpdatedAt = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.UpdatedAt |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VotersValid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VotersValid = append(x.VotersValid, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 12:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VotersInvalid", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VotersInvalid = append(x.VotersInvalid, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 13:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field VotersAbstain", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.VotersAbstain = append(x.VotersAbstain, string(dAtA[iNdEx:postIndex]))
				iNdEx = postIndex
			case 14:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FromKey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FromKey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 15:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StorageProviderId", wireType)
				}
				x.StorageProviderId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StorageProviderId |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 16:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CompressionId", wireType)
				}
				x.CompressionId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CompressionId |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_FinalizedBundle                     protoreflect.MessageDescriptor
	fd_FinalizedBundle_pool_id             protoreflect.FieldDescriptor
	fd_FinalizedBundle_id                  protoreflect.FieldDescriptor
	fd_FinalizedBundle_storage_id          protoreflect.FieldDescriptor
	fd_FinalizedBundle_uploader            protoreflect.FieldDescriptor
	fd_FinalizedBundle_from_index          protoreflect.FieldDescriptor
	fd_FinalizedBundle_to_index            protoreflect.FieldDescriptor
	fd_FinalizedBundle_to_key              protoreflect.FieldDescriptor
	fd_FinalizedBundle_bundle_summary      protoreflect.FieldDescriptor
	fd_FinalizedBundle_data_hash           protoreflect.FieldDescriptor
	fd_FinalizedBundle_finalized_at        protoreflect.FieldDescriptor
	fd_FinalizedBundle_from_key            protoreflect.FieldDescriptor
	fd_FinalizedBundle_storage_provider_id protoreflect.FieldDescriptor
	fd_FinalizedBundle_compression_id      protoreflect.FieldDescriptor
)

func init() {
	file_kyve_bundles_v1beta1_bundles_proto_init()
	md_FinalizedBundle = File_kyve_bundles_v1beta1_bundles_proto.Messages().ByName("FinalizedBundle")
	fd_FinalizedBundle_pool_id = md_FinalizedBundle.Fields().ByName("pool_id")
	fd_FinalizedBundle_id = md_FinalizedBundle.Fields().ByName("id")
	fd_FinalizedBundle_storage_id = md_FinalizedBundle.Fields().ByName("storage_id")
	fd_FinalizedBundle_uploader = md_FinalizedBundle.Fields().ByName("uploader")
	fd_FinalizedBundle_from_index = md_FinalizedBundle.Fields().ByName("from_index")
	fd_FinalizedBundle_to_index = md_FinalizedBundle.Fields().ByName("to_index")
	fd_FinalizedBundle_to_key = md_FinalizedBundle.Fields().ByName("to_key")
	fd_FinalizedBundle_bundle_summary = md_FinalizedBundle.Fields().ByName("bundle_summary")
	fd_FinalizedBundle_data_hash = md_FinalizedBundle.Fields().ByName("data_hash")
	fd_FinalizedBundle_finalized_at = md_FinalizedBundle.Fields().ByName("finalized_at")
	fd_FinalizedBundle_from_key = md_FinalizedBundle.Fields().ByName("from_key")
	fd_FinalizedBundle_storage_provider_id = md_FinalizedBundle.Fields().ByName("storage_provider_id")
	fd_FinalizedBundle_compression_id = md_FinalizedBundle.Fields().ByName("compression_id")
}

var _ protoreflect.Message = (*fastReflection_FinalizedBundle)(nil)

type fastReflection_FinalizedBundle FinalizedBundle

func (x *FinalizedBundle) ProtoReflect() protoreflect.Message {
	return (*fastReflection_FinalizedBundle)(x)
}

func (x *FinalizedBundle) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_bundles_v1beta1_bundles_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_FinalizedBundle_messageType fastReflection_FinalizedBundle_messageType
var _ protoreflect.MessageType = fastReflection_FinalizedBundle_messageType{}

type fastReflection_FinalizedBundle_messageType struct{}

func (x fastReflection_FinalizedBundle_messageType) Zero() protoreflect.Message {
	return (*fastReflection_FinalizedBundle)(nil)
}
func (x fastReflection_FinalizedBundle_messageType) New() protoreflect.Message {
	return new(fastReflection_FinalizedBundle)
}
func (x fastReflection_FinalizedBundle_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_FinalizedBundle
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_FinalizedBundle) Descriptor() protoreflect.MessageDescriptor {
	return md_FinalizedBundle
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_FinalizedBundle) Type() protoreflect.MessageType {
	return _fastReflection_FinalizedBundle_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_FinalizedBundle) New() protoreflect.Message {
	return new(fastReflection_FinalizedBundle)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_FinalizedBundle) Interface() protoreflect.ProtoMessage {
	return (*FinalizedBundle)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_FinalizedBundle) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.PoolId != uint64(0) {
		value := protoreflect.ValueOfUint64(x.PoolId)
		if !f(fd_FinalizedBundle_pool_id, value) {
			return
		}
	}
	if x.Id != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Id)
		if !f(fd_FinalizedBundle_id, value) {
			return
		}
	}
	if x.StorageId != "" {
		value := protoreflect.ValueOfString(x.StorageId)
		if !f(fd_FinalizedBundle_storage_id, value) {
			return
		}
	}
	if x.Uploader != "" {
		value := protoreflect.ValueOfString(x.Uploader)
		if !f(fd_FinalizedBundle_uploader, value) {
			return
		}
	}
	if x.FromIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.FromIndex)
		if !f(fd_FinalizedBundle_from_index, value) {
			return
		}
	}
	if x.ToIndex != uint64(0) {
		value := protoreflect.ValueOfUint64(x.ToIndex)
		if !f(fd_FinalizedBundle_to_index, value) {
			return
		}
	}
	if x.ToKey != "" {
		value := protoreflect.ValueOfString(x.ToKey)
		if !f(fd_FinalizedBundle_to_key, value) {
			return
		}
	}
	if x.BundleSummary != "" {
		value := protoreflect.ValueOfString(x.BundleSummary)
		if !f(fd_FinalizedBundle_bundle_summary, value) {
			return
		}
	}
	if x.DataHash != "" {
		value := protoreflect.ValueOfString(x.DataHash)
		if !f(fd_FinalizedBundle_data_hash, value) {
			return
		}
	}
	if x.FinalizedAt != nil {
		value := protoreflect.ValueOfMessage(x.FinalizedAt.ProtoReflect())
		if !f(fd_FinalizedBundle_finalized_at, value) {
			return
		}
	}
	if x.FromKey != "" {
		value := protoreflect.ValueOfString(x.FromKey)
		if !f(fd_FinalizedBundle_from_key, value) {
			return
		}
	}
	if x.StorageProviderId != uint32(0) {
		value := protoreflect.ValueOfUint32(x.StorageProviderId)
		if !f(fd_FinalizedBundle_storage_provider_id, value) {
			return
		}
	}
	if x.CompressionId != uint32(0) {
		value := protoreflect.ValueOfUint32(x.CompressionId)
		if !f(fd_FinalizedBundle_compression_id, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_FinalizedBundle) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.FinalizedBundle.pool_id":
		return x.PoolId != uint64(0)
	case "kyve.bundles.v1beta1.FinalizedBundle.id":
		return x.Id != uint64(0)
	case "kyve.bundles.v1beta1.FinalizedBundle.storage_id":
		return x.StorageId != ""
	case "kyve.bundles.v1beta1.FinalizedBundle.uploader":
		return x.Uploader != ""
	case "kyve.bundles.v1beta1.FinalizedBundle.from_index":
		return x.FromIndex != uint64(0)
	case "kyve.bundles.v1beta1.FinalizedBundle.to_index":
		return x.ToIndex != uint64(0)
	case "kyve.bundles.v1beta1.FinalizedBundle.to_key":
		return x.ToKey != ""
	case "kyve.bundles.v1beta1.FinalizedBundle.bundle_summary":
		return x.BundleSummary != ""
	case "kyve.bundles.v1beta1.FinalizedBundle.data_hash":
		return x.DataHash != ""
	case "kyve.bundles.v1beta1.FinalizedBundle.finalized_at":
		return x.FinalizedAt != nil
	case "kyve.bundles.v1beta1.FinalizedBundle.from_key":
		return x.FromKey != ""
	case "kyve.bundles.v1beta1.FinalizedBundle.storage_provider_id":
		return x.StorageProviderId != uint32(0)
	case "kyve.bundles.v1beta1.FinalizedBundle.compression_id":
		return x.CompressionId != uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.FinalizedBundle"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.FinalizedBundle does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_FinalizedBundle) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.FinalizedBundle.pool_id":
		x.PoolId = uint64(0)
	case "kyve.bundles.v1beta1.FinalizedBundle.id":
		x.Id = uint64(0)
	case "kyve.bundles.v1beta1.FinalizedBundle.storage_id":
		x.StorageId = ""
	case "kyve.bundles.v1beta1.FinalizedBundle.uploader":
		x.Uploader = ""
	case "kyve.bundles.v1beta1.FinalizedBundle.from_index":
		x.FromIndex = uint64(0)
	case "kyve.bundles.v1beta1.FinalizedBundle.to_index":
		x.ToIndex = uint64(0)
	case "kyve.bundles.v1beta1.FinalizedBundle.to_key":
		x.ToKey = ""
	case "kyve.bundles.v1beta1.FinalizedBundle.bundle_summary":
		x.BundleSummary = ""
	case "kyve.bundles.v1beta1.FinalizedBundle.data_hash":
		x.DataHash = ""
	case "kyve.bundles.v1beta1.FinalizedBundle.finalized_at":
		x.FinalizedAt = nil
	case "kyve.bundles.v1beta1.FinalizedBundle.from_key":
		x.FromKey = ""
	case "kyve.bundles.v1beta1.FinalizedBundle.storage_provider_id":
		x.StorageProviderId = uint32(0)
	case "kyve.bundles.v1beta1.FinalizedBundle.compression_id":
		x.CompressionId = uint32(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.FinalizedBundle"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.FinalizedBundle does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_FinalizedBundle) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.bundles.v1beta1.FinalizedBundle.pool_id":
		value := x.PoolId
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.FinalizedBundle.id":
		value := x.Id
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.FinalizedBundle.storage_id":
		value := x.StorageId
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.FinalizedBundle.uploader":
		value := x.Uploader
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.FinalizedBundle.from_index":
		value := x.FromIndex
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.FinalizedBundle.to_index":
		value := x.ToIndex
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.FinalizedBundle.to_key":
		value := x.ToKey
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.FinalizedBundle.bundle_summary":
		value := x.BundleSummary
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.FinalizedBundle.data_hash":
		value := x.DataHash
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.FinalizedBundle.finalized_at":
		value := x.FinalizedAt
		return protoreflect.ValueOfMessage(value.ProtoReflect())
	case "kyve.bundles.v1beta1.FinalizedBundle.from_key":
		value := x.FromKey
		return protoreflect.ValueOfString(value)
	case "kyve.bundles.v1beta1.FinalizedBundle.storage_provider_id":
		value := x.StorageProviderId
		return protoreflect.ValueOfUint32(value)
	case "kyve.bundles.v1beta1.FinalizedBundle.compression_id":
		value := x.CompressionId
		return protoreflect.ValueOfUint32(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.FinalizedBundle"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.FinalizedBundle does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_FinalizedBundle) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.FinalizedBundle.pool_id":
		x.PoolId = value.Uint()
	case "kyve.bundles.v1beta1.FinalizedBundle.id":
		x.Id = value.Uint()
	case "kyve.bundles.v1beta1.FinalizedBundle.storage_id":
		x.StorageId = value.Interface().(string)
	case "kyve.bundles.v1beta1.FinalizedBundle.uploader":
		x.Uploader = value.Interface().(string)
	case "kyve.bundles.v1beta1.FinalizedBundle.from_index":
		x.FromIndex = value.Uint()
	case "kyve.bundles.v1beta1.FinalizedBundle.to_index":
		x.ToIndex = value.Uint()
	case "kyve.bundles.v1beta1.FinalizedBundle.to_key":
		x.ToKey = value.Interface().(string)
	case "kyve.bundles.v1beta1.FinalizedBundle.bundle_summary":
		x.BundleSummary = value.Interface().(string)
	case "kyve.bundles.v1beta1.FinalizedBundle.data_hash":
		x.DataHash = value.Interface().(string)
	case "kyve.bundles.v1beta1.FinalizedBundle.finalized_at":
		x.FinalizedAt = value.Message().Interface().(*FinalizedAt)
	case "kyve.bundles.v1beta1.FinalizedBundle.from_key":
		x.FromKey = value.Interface().(string)
	case "kyve.bundles.v1beta1.FinalizedBundle.storage_provider_id":
		x.StorageProviderId = uint32(value.Uint())
	case "kyve.bundles.v1beta1.FinalizedBundle.compression_id":
		x.CompressionId = uint32(value.Uint())
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.FinalizedBundle"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.FinalizedBundle does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_FinalizedBundle) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.FinalizedBundle.finalized_at":
		if x.FinalizedAt == nil {
			x.FinalizedAt = new(FinalizedAt)
		}
		return protoreflect.ValueOfMessage(x.FinalizedAt.ProtoReflect())
	case "kyve.bundles.v1beta1.FinalizedBundle.pool_id":
		panic(fmt.Errorf("field pool_id of message kyve.bundles.v1beta1.FinalizedBundle is not mutable"))
	case "kyve.bundles.v1beta1.FinalizedBundle.id":
		panic(fmt.Errorf("field id of message kyve.bundles.v1beta1.FinalizedBundle is not mutable"))
	case "kyve.bundles.v1beta1.FinalizedBundle.storage_id":
		panic(fmt.Errorf("field storage_id of message kyve.bundles.v1beta1.FinalizedBundle is not mutable"))
	case "kyve.bundles.v1beta1.FinalizedBundle.uploader":
		panic(fmt.Errorf("field uploader of message kyve.bundles.v1beta1.FinalizedBundle is not mutable"))
	case "kyve.bundles.v1beta1.FinalizedBundle.from_index":
		panic(fmt.Errorf("field from_index of message kyve.bundles.v1beta1.FinalizedBundle is not mutable"))
	case "kyve.bundles.v1beta1.FinalizedBundle.to_index":
		panic(fmt.Errorf("field to_index of message kyve.bundles.v1beta1.FinalizedBundle is not mutable"))
	case "kyve.bundles.v1beta1.FinalizedBundle.to_key":
		panic(fmt.Errorf("field to_key of message kyve.bundles.v1beta1.FinalizedBundle is not mutable"))
	case "kyve.bundles.v1beta1.FinalizedBundle.bundle_summary":
		panic(fmt.Errorf("field bundle_summary of message kyve.bundles.v1beta1.FinalizedBundle is not mutable"))
	case "kyve.bundles.v1beta1.FinalizedBundle.data_hash":
		panic(fmt.Errorf("field data_hash of message kyve.bundles.v1beta1.FinalizedBundle is not mutable"))
	case "kyve.bundles.v1beta1.FinalizedBundle.from_key":
		panic(fmt.Errorf("field from_key of message kyve.bundles.v1beta1.FinalizedBundle is not mutable"))
	case "kyve.bundles.v1beta1.FinalizedBundle.storage_provider_id":
		panic(fmt.Errorf("field storage_provider_id of message kyve.bundles.v1beta1.FinalizedBundle is not mutable"))
	case "kyve.bundles.v1beta1.FinalizedBundle.compression_id":
		panic(fmt.Errorf("field compression_id of message kyve.bundles.v1beta1.FinalizedBundle is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.FinalizedBundle"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.FinalizedBundle does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_FinalizedBundle) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.FinalizedBundle.pool_id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.FinalizedBundle.id":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.FinalizedBundle.storage_id":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.FinalizedBundle.uploader":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.FinalizedBundle.from_index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.FinalizedBundle.to_index":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.FinalizedBundle.to_key":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.FinalizedBundle.bundle_summary":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.FinalizedBundle.data_hash":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.FinalizedBundle.finalized_at":
		m := new(FinalizedAt)
		return protoreflect.ValueOfMessage(m.ProtoReflect())
	case "kyve.bundles.v1beta1.FinalizedBundle.from_key":
		return protoreflect.ValueOfString("")
	case "kyve.bundles.v1beta1.FinalizedBundle.storage_provider_id":
		return protoreflect.ValueOfUint32(uint32(0))
	case "kyve.bundles.v1beta1.FinalizedBundle.compression_id":
		return protoreflect.ValueOfUint32(uint32(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.FinalizedBundle"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.FinalizedBundle does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_FinalizedBundle) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.bundles.v1beta1.FinalizedBundle", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_FinalizedBundle) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_FinalizedBundle) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_FinalizedBundle) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_FinalizedBundle) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*FinalizedBundle)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.PoolId != 0 {
			n += 1 + runtime.Sov(uint64(x.PoolId))
		}
		if x.Id != 0 {
			n += 1 + runtime.Sov(uint64(x.Id))
		}
		l = len(x.StorageId)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.Uploader)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.FromIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.FromIndex))
		}
		if x.ToIndex != 0 {
			n += 1 + runtime.Sov(uint64(x.ToIndex))
		}
		l = len(x.ToKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.BundleSummary)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.DataHash)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.FinalizedAt != nil {
			l = options.Size(x.FinalizedAt)
			n += 1 + l + runtime.Sov(uint64(l))
		}
		l = len(x.FromKey)
		if l > 0 {
			n += 1 + l + runtime.Sov(uint64(l))
		}
		if x.StorageProviderId != 0 {
			n += 1 + runtime.Sov(uint64(x.StorageProviderId))
		}
		if x.CompressionId != 0 {
			n += 1 + runtime.Sov(uint64(x.CompressionId))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*FinalizedBundle)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.CompressionId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.CompressionId))
			i--
			dAtA[i] = 0x68
		}
		if x.StorageProviderId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.StorageProviderId))
			i--
			dAtA[i] = 0x60
		}
		if len(x.FromKey) > 0 {
			i -= len(x.FromKey)
			copy(dAtA[i:], x.FromKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.FromKey)))
			i--
			dAtA[i] = 0x5a
		}
		if x.FinalizedAt != nil {
			encoded, err := options.Marshal(x.FinalizedAt)
			if err != nil {
				return protoiface.MarshalOutput{
					NoUnkeyedLiterals: input.NoUnkeyedLiterals,
					Buf:               input.Buf,
				}, err
			}
			i -= len(encoded)
			copy(dAtA[i:], encoded)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(encoded)))
			i--
			dAtA[i] = 0x52
		}
		if len(x.DataHash) > 0 {
			i -= len(x.DataHash)
			copy(dAtA[i:], x.DataHash)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.DataHash)))
			i--
			dAtA[i] = 0x4a
		}
		if len(x.BundleSummary) > 0 {
			i -= len(x.BundleSummary)
			copy(dAtA[i:], x.BundleSummary)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.BundleSummary)))
			i--
			dAtA[i] = 0x42
		}
		if len(x.ToKey) > 0 {
			i -= len(x.ToKey)
			copy(dAtA[i:], x.ToKey)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.ToKey)))
			i--
			dAtA[i] = 0x3a
		}
		if x.ToIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.ToIndex))
			i--
			dAtA[i] = 0x30
		}
		if x.FromIndex != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.FromIndex))
			i--
			dAtA[i] = 0x28
		}
		if len(x.Uploader) > 0 {
			i -= len(x.Uploader)
			copy(dAtA[i:], x.Uploader)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.Uploader)))
			i--
			dAtA[i] = 0x22
		}
		if len(x.StorageId) > 0 {
			i -= len(x.StorageId)
			copy(dAtA[i:], x.StorageId)
			i = runtime.EncodeVarint(dAtA, i, uint64(len(x.StorageId)))
			i--
			dAtA[i] = 0x1a
		}
		if x.Id != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Id))
			i--
			dAtA[i] = 0x10
		}
		if x.PoolId != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.PoolId))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*FinalizedBundle)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: FinalizedBundle: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: FinalizedBundle: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field PoolId", wireType)
				}
				x.PoolId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.PoolId |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
				}
				x.Id = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Id |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 3:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StorageId", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.StorageId = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 4:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Uploader", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.Uploader = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 5:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FromIndex", wireType)
				}
				x.FromIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.FromIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 6:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ToIndex", wireType)
				}
				x.ToIndex = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.ToIndex |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 7:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field ToKey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.ToKey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 8:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field BundleSummary", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.BundleSummary = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 9:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field DataHash", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.DataHash = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 10:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FinalizedAt", wireType)
				}
				var msglen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					msglen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if msglen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + msglen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if x.FinalizedAt == nil {
					x.FinalizedAt = &FinalizedAt{}
				}
				if err := options.Unmarshal(dAtA[iNdEx:postIndex], x.FinalizedAt); err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				iNdEx = postIndex
			case 11:
				if wireType != 2 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field FromKey", wireType)
				}
				var stringLen uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					stringLen |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				intStringLen := int(stringLen)
				if intStringLen < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				postIndex := iNdEx + intStringLen
				if postIndex < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if postIndex > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				x.FromKey = string(dAtA[iNdEx:postIndex])
				iNdEx = postIndex
			case 12:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field StorageProviderId", wireType)
				}
				x.StorageProviderId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.StorageProviderId |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 13:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field CompressionId", wireType)
				}
				x.CompressionId = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.CompressionId |= uint32(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

var (
	md_FinalizedAt           protoreflect.MessageDescriptor
	fd_FinalizedAt_height    protoreflect.FieldDescriptor
	fd_FinalizedAt_timestamp protoreflect.FieldDescriptor
)

func init() {
	file_kyve_bundles_v1beta1_bundles_proto_init()
	md_FinalizedAt = File_kyve_bundles_v1beta1_bundles_proto.Messages().ByName("FinalizedAt")
	fd_FinalizedAt_height = md_FinalizedAt.Fields().ByName("height")
	fd_FinalizedAt_timestamp = md_FinalizedAt.Fields().ByName("timestamp")
}

var _ protoreflect.Message = (*fastReflection_FinalizedAt)(nil)

type fastReflection_FinalizedAt FinalizedAt

func (x *FinalizedAt) ProtoReflect() protoreflect.Message {
	return (*fastReflection_FinalizedAt)(x)
}

func (x *FinalizedAt) slowProtoReflect() protoreflect.Message {
	mi := &file_kyve_bundles_v1beta1_bundles_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

var _fastReflection_FinalizedAt_messageType fastReflection_FinalizedAt_messageType
var _ protoreflect.MessageType = fastReflection_FinalizedAt_messageType{}

type fastReflection_FinalizedAt_messageType struct{}

func (x fastReflection_FinalizedAt_messageType) Zero() protoreflect.Message {
	return (*fastReflection_FinalizedAt)(nil)
}
func (x fastReflection_FinalizedAt_messageType) New() protoreflect.Message {
	return new(fastReflection_FinalizedAt)
}
func (x fastReflection_FinalizedAt_messageType) Descriptor() protoreflect.MessageDescriptor {
	return md_FinalizedAt
}

// Descriptor returns message descriptor, which contains only the protobuf
// type information for the message.
func (x *fastReflection_FinalizedAt) Descriptor() protoreflect.MessageDescriptor {
	return md_FinalizedAt
}

// Type returns the message type, which encapsulates both Go and protobuf
// type information. If the Go type information is not needed,
// it is recommended that the message descriptor be used instead.
func (x *fastReflection_FinalizedAt) Type() protoreflect.MessageType {
	return _fastReflection_FinalizedAt_messageType
}

// New returns a newly allocated and mutable empty message.
func (x *fastReflection_FinalizedAt) New() protoreflect.Message {
	return new(fastReflection_FinalizedAt)
}

// Interface unwraps the message reflection interface and
// returns the underlying ProtoMessage interface.
func (x *fastReflection_FinalizedAt) Interface() protoreflect.ProtoMessage {
	return (*FinalizedAt)(x)
}

// Range iterates over every populated field in an undefined order,
// calling f for each field descriptor and value encountered.
// Range returns immediately if f returns false.
// While iterating, mutating operations may only be performed
// on the current field descriptor.
func (x *fastReflection_FinalizedAt) Range(f func(protoreflect.FieldDescriptor, protoreflect.Value) bool) {
	if x.Height != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Height)
		if !f(fd_FinalizedAt_height, value) {
			return
		}
	}
	if x.Timestamp != uint64(0) {
		value := protoreflect.ValueOfUint64(x.Timestamp)
		if !f(fd_FinalizedAt_timestamp, value) {
			return
		}
	}
}

// Has reports whether a field is populated.
//
// Some fields have the property of nullability where it is possible to
// distinguish between the default value of a field and whether the field
// was explicitly populated with the default value. Singular message fields,
// member fields of a oneof, and proto2 scalar fields are nullable. Such
// fields are populated only if explicitly set.
//
// In other cases (aside from the nullable cases above),
// a proto3 scalar field is populated if it contains a non-zero value, and
// a repeated field is populated if it is non-empty.
func (x *fastReflection_FinalizedAt) Has(fd protoreflect.FieldDescriptor) bool {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.FinalizedAt.height":
		return x.Height != uint64(0)
	case "kyve.bundles.v1beta1.FinalizedAt.timestamp":
		return x.Timestamp != uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.FinalizedAt"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.FinalizedAt does not contain field %s", fd.FullName()))
	}
}

// Clear clears the field such that a subsequent Has call reports false.
//
// Clearing an extension field clears both the extension type and value
// associated with the given field number.
//
// Clear is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_FinalizedAt) Clear(fd protoreflect.FieldDescriptor) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.FinalizedAt.height":
		x.Height = uint64(0)
	case "kyve.bundles.v1beta1.FinalizedAt.timestamp":
		x.Timestamp = uint64(0)
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.FinalizedAt"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.FinalizedAt does not contain field %s", fd.FullName()))
	}
}

// Get retrieves the value for a field.
//
// For unpopulated scalars, it returns the default value, where
// the default value of a bytes scalar is guaranteed to be a copy.
// For unpopulated composite types, it returns an empty, read-only view
// of the value; to obtain a mutable reference, use Mutable.
func (x *fastReflection_FinalizedAt) Get(descriptor protoreflect.FieldDescriptor) protoreflect.Value {
	switch descriptor.FullName() {
	case "kyve.bundles.v1beta1.FinalizedAt.height":
		value := x.Height
		return protoreflect.ValueOfUint64(value)
	case "kyve.bundles.v1beta1.FinalizedAt.timestamp":
		value := x.Timestamp
		return protoreflect.ValueOfUint64(value)
	default:
		if descriptor.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.FinalizedAt"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.FinalizedAt does not contain field %s", descriptor.FullName()))
	}
}

// Set stores the value for a field.
//
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType.
// When setting a composite type, it is unspecified whether the stored value
// aliases the source's memory in any way. If the composite value is an
// empty, read-only value, then it panics.
//
// Set is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_FinalizedAt) Set(fd protoreflect.FieldDescriptor, value protoreflect.Value) {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.FinalizedAt.height":
		x.Height = value.Uint()
	case "kyve.bundles.v1beta1.FinalizedAt.timestamp":
		x.Timestamp = value.Uint()
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.FinalizedAt"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.FinalizedAt does not contain field %s", fd.FullName()))
	}
}

// Mutable returns a mutable reference to a composite type.
//
// If the field is unpopulated, it may allocate a composite value.
// For a field belonging to a oneof, it implicitly clears any other field
// that may be currently set within the same oneof.
// For extension fields, it implicitly stores the provided ExtensionType
// if not already stored.
// It panics if the field does not contain a composite type.
//
// Mutable is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_FinalizedAt) Mutable(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.FinalizedAt.height":
		panic(fmt.Errorf("field height of message kyve.bundles.v1beta1.FinalizedAt is not mutable"))
	case "kyve.bundles.v1beta1.FinalizedAt.timestamp":
		panic(fmt.Errorf("field timestamp of message kyve.bundles.v1beta1.FinalizedAt is not mutable"))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.FinalizedAt"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.FinalizedAt does not contain field %s", fd.FullName()))
	}
}

// NewField returns a new value that is assignable to the field
// for the given descriptor. For scalars, this returns the default value.
// For lists, maps, and messages, this returns a new, empty, mutable value.
func (x *fastReflection_FinalizedAt) NewField(fd protoreflect.FieldDescriptor) protoreflect.Value {
	switch fd.FullName() {
	case "kyve.bundles.v1beta1.FinalizedAt.height":
		return protoreflect.ValueOfUint64(uint64(0))
	case "kyve.bundles.v1beta1.FinalizedAt.timestamp":
		return protoreflect.ValueOfUint64(uint64(0))
	default:
		if fd.IsExtension() {
			panic(fmt.Errorf("proto3 declared messages do not support extensions: kyve.bundles.v1beta1.FinalizedAt"))
		}
		panic(fmt.Errorf("message kyve.bundles.v1beta1.FinalizedAt does not contain field %s", fd.FullName()))
	}
}

// WhichOneof reports which field within the oneof is populated,
// returning nil if none are populated.
// It panics if the oneof descriptor does not belong to this message.
func (x *fastReflection_FinalizedAt) WhichOneof(d protoreflect.OneofDescriptor) protoreflect.FieldDescriptor {
	switch d.FullName() {
	default:
		panic(fmt.Errorf("%s is not a oneof field in kyve.bundles.v1beta1.FinalizedAt", d.FullName()))
	}
	panic("unreachable")
}

// GetUnknown retrieves the entire list of unknown fields.
// The caller may only mutate the contents of the RawFields
// if the mutated bytes are stored back into the message with SetUnknown.
func (x *fastReflection_FinalizedAt) GetUnknown() protoreflect.RawFields {
	return x.unknownFields
}

// SetUnknown stores an entire list of unknown fields.
// The raw fields must be syntactically valid according to the wire format.
// An implementation may panic if this is not the case.
// Once stored, the caller must not mutate the content of the RawFields.
// An empty RawFields may be passed to clear the fields.
//
// SetUnknown is a mutating operation and unsafe for concurrent use.
func (x *fastReflection_FinalizedAt) SetUnknown(fields protoreflect.RawFields) {
	x.unknownFields = fields
}

// IsValid reports whether the message is valid.
//
// An invalid message is an empty, read-only value.
//
// An invalid message often corresponds to a nil pointer of the concrete
// message type, but the details are implementation dependent.
// Validity is not part of the protobuf data model, and may not
// be preserved in marshaling or other operations.
func (x *fastReflection_FinalizedAt) IsValid() bool {
	return x != nil
}

// ProtoMethods returns optional fastReflectionFeature-path implementations of various operations.
// This method may return nil.
//
// The returned methods type is identical to
// "google.golang.org/protobuf/runtime/protoiface".Methods.
// Consult the protoiface package documentation for details.
func (x *fastReflection_FinalizedAt) ProtoMethods() *protoiface.Methods {
	size := func(input protoiface.SizeInput) protoiface.SizeOutput {
		x := input.Message.Interface().(*FinalizedAt)
		if x == nil {
			return protoiface.SizeOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Size:              0,
			}
		}
		options := runtime.SizeInputToOptions(input)
		_ = options
		var n int
		var l int
		_ = l
		if x.Height != 0 {
			n += 1 + runtime.Sov(uint64(x.Height))
		}
		if x.Timestamp != 0 {
			n += 1 + runtime.Sov(uint64(x.Timestamp))
		}
		if x.unknownFields != nil {
			n += len(x.unknownFields)
		}
		return protoiface.SizeOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Size:              n,
		}
	}

	marshal := func(input protoiface.MarshalInput) (protoiface.MarshalOutput, error) {
		x := input.Message.Interface().(*FinalizedAt)
		if x == nil {
			return protoiface.MarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Buf:               input.Buf,
			}, nil
		}
		options := runtime.MarshalInputToOptions(input)
		_ = options
		size := options.Size(x)
		dAtA := make([]byte, size)
		i := len(dAtA)
		_ = i
		var l int
		_ = l
		if x.unknownFields != nil {
			i -= len(x.unknownFields)
			copy(dAtA[i:], x.unknownFields)
		}
		if x.Timestamp != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Timestamp))
			i--
			dAtA[i] = 0x10
		}
		if x.Height != 0 {
			i = runtime.EncodeVarint(dAtA, i, uint64(x.Height))
			i--
			dAtA[i] = 0x8
		}
		if input.Buf != nil {
			input.Buf = append(input.Buf, dAtA...)
		} else {
			input.Buf = dAtA
		}
		return protoiface.MarshalOutput{
			NoUnkeyedLiterals: input.NoUnkeyedLiterals,
			Buf:               input.Buf,
		}, nil
	}
	unmarshal := func(input protoiface.UnmarshalInput) (protoiface.UnmarshalOutput, error) {
		x := input.Message.Interface().(*FinalizedAt)
		if x == nil {
			return protoiface.UnmarshalOutput{
				NoUnkeyedLiterals: input.NoUnkeyedLiterals,
				Flags:             input.Flags,
			}, nil
		}
		options := runtime.UnmarshalInputToOptions(input)
		_ = options
		dAtA := input.Buf
		l := len(dAtA)
		iNdEx := 0
		for iNdEx < l {
			preIndex := iNdEx
			var wire uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
				}
				if iNdEx >= l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				wire |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			fieldNum := int32(wire >> 3)
			wireType := int(wire & 0x7)
			if wireType == 4 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: FinalizedAt: wiretype end group for non-group")
			}
			if fieldNum <= 0 {
				return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: FinalizedAt: illegal tag %d (wire type %d)", fieldNum, wire)
			}
			switch fieldNum {
			case 1:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
				}
				x.Height = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Height |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			case 2:
				if wireType != 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, fmt.Errorf("proto: wrong wireType = %d for field Timestamp", wireType)
				}
				x.Timestamp = 0
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrIntOverflow
					}
					if iNdEx >= l {
						return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					x.Timestamp |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
			default:
				iNdEx = preIndex
				skippy, err := runtime.Skip(dAtA[iNdEx:])
				if err != nil {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, err
				}
				if (skippy < 0) || (iNdEx+skippy) < 0 {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, runtime.ErrInvalidLength
				}
				if (iNdEx + skippy) > l {
					return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
				}
				if !options.DiscardUnknown {
					x.unknownFields = append(x.unknownFields, dAtA[iNdEx:iNdEx+skippy]...)
				}
				iNdEx += skippy
			}
		}

		if iNdEx > l {
			return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, io.ErrUnexpectedEOF
		}
		return protoiface.UnmarshalOutput{NoUnkeyedLiterals: input.NoUnkeyedLiterals, Flags: input.Flags}, nil
	}
	return &protoiface.Methods{
		NoUnkeyedLiterals: struct{}{},
		Flags:             protoiface.SupportMarshalDeterministic | protoiface.SupportUnmarshalDiscardUnknown,
		Size:              size,
		Marshal:           marshal,
		Unmarshal:         unmarshal,
		Merge:             nil,
		CheckInitialized:  nil,
	}
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.0
// 	protoc        (unknown)
// source: kyve/bundles/v1beta1/bundles.proto

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// BundleStatus represents the status of an evaluated bundle
// proposal.
type BundleStatus int32

const (
	// BUNDLE_STATUS_UNSPECIFIED ...
	BundleStatus_BUNDLE_STATUS_UNSPECIFIED BundleStatus = 0
	// BUNDLE_STATUS_VALID ...
	BundleStatus_BUNDLE_STATUS_VALID BundleStatus = 1
	// BUNDLE_STATUS_INVALID ...
	BundleStatus_BUNDLE_STATUS_INVALID BundleStatus = 2
	// BUNDLE_STATUS_NO_FUNDS ...
	BundleStatus_BUNDLE_STATUS_NO_FUNDS BundleStatus = 3
	// BUNDLE_STATUS_NO_QUORUM ...
	BundleStatus_BUNDLE_STATUS_NO_QUORUM BundleStatus = 4
	// BUNDLE_STATUS_DISABLED  ...
	BundleStatus_BUNDLE_STATUS_DISABLED BundleStatus = 5
)

// Enum value maps for BundleStatus.
var (
	BundleStatus_name = map[int32]string{
		0: "BUNDLE_STATUS_UNSPECIFIED",
		1: "BUNDLE_STATUS_VALID",
		2: "BUNDLE_STATUS_INVALID",
		3: "BUNDLE_STATUS_NO_FUNDS",
		4: "BUNDLE_STATUS_NO_QUORUM",
		5: "BUNDLE_STATUS_DISABLED",
	}
	BundleStatus_value = map[string]int32{
		"BUNDLE_STATUS_UNSPECIFIED": 0,
		"BUNDLE_STATUS_VALID":       1,
		"BUNDLE_STATUS_INVALID":     2,
		"BUNDLE_STATUS_NO_FUNDS":    3,
		"BUNDLE_STATUS_NO_QUORUM":   4,
		"BUNDLE_STATUS_DISABLED":    5,
	}
)

func (x BundleStatus) Enum() *BundleStatus {
	p := new(BundleStatus)
	*p = x
	return p
}

func (x BundleStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BundleStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_kyve_bundles_v1beta1_bundles_proto_enumTypes[0].Descriptor()
}

func (BundleStatus) Type() protoreflect.EnumType {
	return &file_kyve_bundles_v1beta1_bundles_proto_enumTypes[0]
}

func (x BundleStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BundleStatus.Descriptor instead.
func (BundleStatus) EnumDescriptor() ([]byte, []int) {
	return file_kyve_bundles_v1beta1_bundles_proto_rawDescGZIP(), []int{0}
}

// BundleProposal represents the current bundle proposal
// of a storage pool
type BundleProposal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pool_id is the id of the pool for which this proposal is for
	PoolId uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// storage_id is the id with which the data can be retrieved from
	StorageId string `protobuf:"bytes,2,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	// uploader is the address of the staker who submitted the current proposal
	Uploader string `protobuf:"bytes,3,opt,name=uploader,proto3" json:"uploader,omitempty"`
	// next_uploader is the address of the staker who should upload the next proposal
	NextUploader string `protobuf:"bytes,4,opt,name=next_uploader,json=nextUploader,proto3" json:"next_uploader,omitempty"`
	// data_size the size of the data in bytes
	DataSize uint64 `protobuf:"varint,5,opt,name=data_size,json=dataSize,proto3" json:"data_size,omitempty"`
	// bundle_size the size of the bundle (amount of data items)
	BundleSize uint64 `protobuf:"varint,6,opt,name=bundle_size,json=bundleSize,proto3" json:"bundle_size,omitempty"`
	// to_key the key of the last data item in the bundle proposal
	ToKey string `protobuf:"bytes,7,opt,name=to_key,json=toKey,proto3" json:"to_key,omitempty"`
	// bundle_summary a string summary of the current proposal
	BundleSummary string `protobuf:"bytes,8,opt,name=bundle_summary,json=bundleSummary,proto3" json:"bundle_summary,omitempty"`
	// data_hash a sha256 hash of the raw compressed data
	DataHash string `protobuf:"bytes,9,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	// updated_at the last time this proposal was edited
	UpdatedAt uint64 `protobuf:"varint,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// voters_valid list of all stakers who voted in favor for current proposal
	VotersValid []string `protobuf:"bytes,11,rep,name=voters_valid,json=votersValid,proto3" json:"voters_valid,omitempty"`
	// voters_invalid list of all stakers who voted against for current proposal
	VotersInvalid []string `protobuf:"bytes,12,rep,name=voters_invalid,json=votersInvalid,proto3" json:"voters_invalid,omitempty"`
	// voters_abstain list of all stakers who voted abstain for current proposal
	VotersAbstain []string `protobuf:"bytes,13,rep,name=voters_abstain,json=votersAbstain,proto3" json:"voters_abstain,omitempty"`
	// from_key the key of the first data item in the bundle proposal
	FromKey string `protobuf:"bytes,14,opt,name=from_key,json=fromKey,proto3" json:"from_key,omitempty"`
	// storage_provider_id the id of the storage provider where the bundle is stored
	StorageProviderId uint32 `protobuf:"varint,15,opt,name=storage_provider_id,json=storageProviderId,proto3" json:"storage_provider_id,omitempty"`
	// compression_id the id of the compression type with which the data was compressed
	CompressionId uint32 `protobuf:"varint,16,opt,name=compression_id,json=compressionId,proto3" json:"compression_id,omitempty"`
}

func (x *BundleProposal) Reset() {
	*x = BundleProposal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_bundles_v1beta1_bundles_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BundleProposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BundleProposal) ProtoMessage() {}

// Deprecated: Use BundleProposal.ProtoReflect.Descriptor instead.
func (*BundleProposal) Descriptor() ([]byte, []int) {
	return file_kyve_bundles_v1beta1_bundles_proto_rawDescGZIP(), []int{0}
}

func (x *BundleProposal) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *BundleProposal) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *BundleProposal) GetUploader() string {
	if x != nil {
		return x.Uploader
	}
	return ""
}

func (x *BundleProposal) GetNextUploader() string {
	if x != nil {
		return x.NextUploader
	}
	return ""
}

func (x *BundleProposal) GetDataSize() uint64 {
	if x != nil {
		return x.DataSize
	}
	return 0
}

func (x *BundleProposal) GetBundleSize() uint64 {
	if x != nil {
		return x.BundleSize
	}
	return 0
}

func (x *BundleProposal) GetToKey() string {
	if x != nil {
		return x.ToKey
	}
	return ""
}

func (x *BundleProposal) GetBundleSummary() string {
	if x != nil {
		return x.BundleSummary
	}
	return ""
}

func (x *BundleProposal) GetDataHash() string {
	if x != nil {
		return x.DataHash
	}
	return ""
}

func (x *BundleProposal) GetUpdatedAt() uint64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *BundleProposal) GetVotersValid() []string {
	if x != nil {
		return x.VotersValid
	}
	return nil
}

func (x *BundleProposal) GetVotersInvalid() []string {
	if x != nil {
		return x.VotersInvalid
	}
	return nil
}

func (x *BundleProposal) GetVotersAbstain() []string {
	if x != nil {
		return x.VotersAbstain
	}
	return nil
}

func (x *BundleProposal) GetFromKey() string {
	if x != nil {
		return x.FromKey
	}
	return ""
}

func (x *BundleProposal) GetStorageProviderId() uint32 {
	if x != nil {
		return x.StorageProviderId
	}
	return 0
}

func (x *BundleProposal) GetCompressionId() uint32 {
	if x != nil {
		return x.CompressionId
	}
	return 0
}

// FinalizedBundle represents a bundle proposal where the majority
// agreed on its validity
type FinalizedBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// pool_id is the id of the pool for which this proposal is for
	PoolId uint64 `protobuf:"varint,1,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	// id is a unique identifier for each finalized bundle in a pool
	Id uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// storage_id is the id with which the data can be retrieved from
	StorageId string `protobuf:"bytes,3,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	// uploader is the address of the staker who submitted this bundle
	Uploader string `protobuf:"bytes,4,opt,name=uploader,proto3" json:"uploader,omitempty"`
	// from_index is the index from where the bundle starts (inclusive)
	FromIndex uint64 `protobuf:"varint,5,opt,name=from_index,json=fromIndex,proto3" json:"from_index,omitempty"`
	// to_index is the index to which the bundle goes (exclusive)
	ToIndex uint64 `protobuf:"varint,6,opt,name=to_index,json=toIndex,proto3" json:"to_index,omitempty"`
	// to_key the key of the last data item in the bundle proposal
	ToKey string `protobuf:"bytes,7,opt,name=to_key,json=toKey,proto3" json:"to_key,omitempty"`
	// bundle_summary a string summary of the current proposal
	BundleSummary string `protobuf:"bytes,8,opt,name=bundle_summary,json=bundleSummary,proto3" json:"bundle_summary,omitempty"`
	// data_hash a sha256 hash of the raw compressed data
	DataHash string `protobuf:"bytes,9,opt,name=data_hash,json=dataHash,proto3" json:"data_hash,omitempty"`
	// finalized_at contains details of the block that finalized this bundle.
	FinalizedAt *FinalizedAt `protobuf:"bytes,10,opt,name=finalized_at,json=finalizedAt,proto3" json:"finalized_at,omitempty"`
	// from_key the key of the first data item in the bundle proposal
	FromKey string `protobuf:"bytes,11,opt,name=from_key,json=fromKey,proto3" json:"from_key,omitempty"`
	// storage_provider_id the id of the storage provider where the bundle is stored
	StorageProviderId uint32 `protobuf:"varint,12,opt,name=storage_provider_id,json=storageProviderId,proto3" json:"storage_provider_id,omitempty"`
	// compression_id the id of the compression type with which the data was compressed
	CompressionId uint32 `protobuf:"varint,13,opt,name=compression_id,json=compressionId,proto3" json:"compression_id,omitempty"`
}

func (x *FinalizedBundle) Reset() {
	*x = FinalizedBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_bundles_v1beta1_bundles_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizedBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizedBundle) ProtoMessage() {}

// Deprecated: Use FinalizedBundle.ProtoReflect.Descriptor instead.
func (*FinalizedBundle) Descriptor() ([]byte, []int) {
	return file_kyve_bundles_v1beta1_bundles_proto_rawDescGZIP(), []int{1}
}

func (x *FinalizedBundle) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *FinalizedBundle) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FinalizedBundle) GetStorageId() string {
	if x != nil {
		return x.StorageId
	}
	return ""
}

func (x *FinalizedBundle) GetUploader() string {
	if x != nil {
		return x.Uploader
	}
	return ""
}

func (x *FinalizedBundle) GetFromIndex() uint64 {
	if x != nil {
		return x.FromIndex
	}
	return 0
}

func (x *FinalizedBundle) GetToIndex() uint64 {
	if x != nil {
		return x.ToIndex
	}
	return 0
}

func (x *FinalizedBundle) GetToKey() string {
	if x != nil {
		return x.ToKey
	}
	return ""
}

func (x *FinalizedBundle) GetBundleSummary() string {
	if x != nil {
		return x.BundleSummary
	}
	return ""
}

func (x *FinalizedBundle) GetDataHash() string {
	if x != nil {
		return x.DataHash
	}
	return ""
}

func (x *FinalizedBundle) GetFinalizedAt() *FinalizedAt {
	if x != nil {
		return x.FinalizedAt
	}
	return nil
}

func (x *FinalizedBundle) GetFromKey() string {
	if x != nil {
		return x.FromKey
	}
	return ""
}

func (x *FinalizedBundle) GetStorageProviderId() uint32 {
	if x != nil {
		return x.StorageProviderId
	}
	return 0
}

func (x *FinalizedBundle) GetCompressionId() uint32 {
	if x != nil {
		return x.CompressionId
	}
	return 0
}

// FinalizedAt ...
type FinalizedAt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// height ...
	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	// timestamp ...
	Timestamp uint64 `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *FinalizedAt) Reset() {
	*x = FinalizedAt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kyve_bundles_v1beta1_bundles_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalizedAt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalizedAt) ProtoMessage() {}

// Deprecated: Use FinalizedAt.ProtoReflect.Descriptor instead.
func (*FinalizedAt) Descriptor() ([]byte, []int) {
	return file_kyve_bundles_v1beta1_bundles_proto_rawDescGZIP(), []int{2}
}

func (x *FinalizedAt) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *FinalizedAt) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_kyve_bundles_v1beta1_bundles_proto protoreflect.FileDescriptor

var file_kyve_bundles_v1beta1_bundles_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6b, 0x79, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x6b, 0x79, 0x76, 0x65, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x14, 0x67, 0x6f, 0x67, 0x6f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x67, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa4, 0x04, 0x0a, 0x0e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6e, 0x65, 0x78, 0x74, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x4b, 0x65,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x74, 0x65,
	0x72, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x65, 0x72,
	0x73, 0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x61, 0x62, 0x73, 0x74, 0x61, 0x69, 0x6e,
	0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x72, 0x73, 0x41, 0x62,
	0x73, 0x74, 0x61, 0x69, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4b, 0x65, 0x79,
	0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xc2, 0x03, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x6f,
	0x6f, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x74, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x6f, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x4b, 0x65, 0x79,
	0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x44, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6b, 0x79, 0x76,
	0x65, 0x2e, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x74, 0x52, 0x0b, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x72,
	0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63,
	0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x0b,
	0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2a, 0xbc, 0x01, 0x0a, 0x0c, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x19, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x55,
	0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x5f, 0x46, 0x55, 0x4e, 0x44, 0x53, 0x10,
	0x03, 0x12, 0x1b, 0x0a, 0x17, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x4e, 0x4f, 0x5f, 0x51, 0x55, 0x4f, 0x52, 0x55, 0x4d, 0x10, 0x04, 0x12, 0x1a,
	0x0a, 0x16, 0x42, 0x55, 0x4e, 0x44, 0x4c, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x05, 0x1a, 0x04, 0x88, 0xa3, 0x1e, 0x00,
	0x42, 0xe3, 0x01, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e, 0x6b, 0x79, 0x76, 0x65, 0x2e, 0x62, 0x75,
	0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x42, 0x0c, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x47, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b, 0x59, 0x56, 0x45, 0x4e, 0x65,
	0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x75, 0x6c, 0x73,
	0x61, 0x72, 0x2f, 0x6b, 0x79, 0x76, 0x65, 0x2f, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x3b, 0x62, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x03, 0x4b, 0x42, 0x58, 0xaa, 0x02, 0x14, 0x4b,
	0x79, 0x76, 0x65, 0x2e, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x2e, 0x56, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0xca, 0x02, 0x14, 0x4b, 0x79, 0x76, 0x65, 0x5c, 0x42, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x73, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xe2, 0x02, 0x20, 0x4b, 0x79, 0x76,
	0x65, 0x5c, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16,
	0x4b, 0x79, 0x76, 0x65, 0x3a, 0x3a, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x73, 0x3a, 0x3a, 0x56,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kyve_bundles_v1beta1_bundles_proto_rawDescOnce sync.Once
	file_kyve_bundles_v1beta1_bundles_proto_rawDescData = file_kyve_bundles_v1beta1_bundles_proto_rawDesc
)

func file_kyve_bundles_v1beta1_bundles_proto_rawDescGZIP() []byte {
	file_kyve_bundles_v1beta1_bundles_proto_rawDescOnce.Do(func() {
		file_kyve_bundles_v1beta1_bundles_proto_rawDescData = protoimpl.X.CompressGZIP(file_kyve_bundles_v1beta1_bundles_proto_rawDescData)
	})
	return file_kyve_bundles_v1beta1_bundles_proto_rawDescData
}

var file_kyve_bundles_v1beta1_bundles_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kyve_bundles_v1beta1_bundles_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_kyve_bundles_v1beta1_bundles_proto_goTypes = []interface{}{
	(BundleStatus)(0),       // 0: kyve.bundles.v1beta1.BundleStatus
	(*BundleProposal)(nil),  // 1: kyve.bundles.v1beta1.BundleProposal
	(*FinalizedBundle)(nil), // 2: kyve.bundles.v1beta1.FinalizedBundle
	(*FinalizedAt)(nil),     // 3: kyve.bundles.v1beta1.FinalizedAt
}
var file_kyve_bundles_v1beta1_bundles_proto_depIdxs = []int32{
	3, // 0: kyve.bundles.v1beta1.FinalizedBundle.finalized_at:type_name -> kyve.bundles.v1beta1.FinalizedAt
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_kyve_bundles_v1beta1_bundles_proto_init() }
func file_kyve_bundles_v1beta1_bundles_proto_init() {
	if File_kyve_bundles_v1beta1_bundles_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kyve_bundles_v1beta1_bundles_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BundleProposal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_bundles_v1beta1_bundles_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizedBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kyve_bundles_v1beta1_bundles_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalizedAt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kyve_bundles_v1beta1_bundles_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kyve_bundles_v1beta1_bundles_proto_goTypes,
		DependencyIndexes: file_kyve_bundles_v1beta1_bundles_proto_depIdxs,
		EnumInfos:         file_kyve_bundles_v1beta1_bundles_proto_enumTypes,
		MessageInfos:      file_kyve_bundles_v1beta1_bundles_proto_msgTypes,
	}.Build()
	File_kyve_bundles_v1beta1_bundles_proto = out.File
	file_kyve_bundles_v1beta1_bundles_proto_rawDesc = nil
	file_kyve_bundles_v1beta1_bundles_proto_goTypes = nil
	file_kyve_bundles_v1beta1_bundles_proto_depIdxs = nil
}
