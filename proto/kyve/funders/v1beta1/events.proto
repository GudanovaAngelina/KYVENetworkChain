syntax = "proto3";

package kyve.funders.v1beta1;

//import "gogoproto/gogo.proto";
//import "kyve/funders/v1beta1/params.proto";

option go_package = "github.com/KYVENetwork/chain/x/funders/types";

// EventCreateFunder is an event emitted when a funder is created.
// emitted_by: MsgCreateFunder
message EventCreateFunder {
  // address is the account address of the funder.
  string address = 1;
  // moniker ...
  string moniker = 2;
  // identity is the 64 bit keybase.io identity string
  string identity = 3;
  // logo ...
  string logo = 4;
  // website ...
  string website = 5;
  // contact ...
  string contact = 6;
  // description are some additional notes the funder finds important
  string description = 7;
}

// EventUpdateFunder is an event emitted when a funder is created.
// emitted_by: MsgCreateFunder
message EventUpdateFunder {
  // address is the account address of the funder.
  string address = 1;
  // moniker ...
  string moniker = 2;
  // identity is the 64 bit keybase.io identity string
  string identity = 3;
  // logo ...
  string logo = 4;
  // website ...
  string website = 5;
  // contact ...
  string contact = 6;
  // description are some additional notes the funder finds important
  string description = 7;
}

// EventFundPool is an event emitted when a pool is funded.
// emitted_by: MsgFundPool
message EventFundPool {
  // pool_id is the unique ID of the pool.
  uint64 pool_id = 1;
  // address is the account address of the pool funder.
  string address = 2;
  // amount is the amount in ukyve the funder has funded
  uint64 amount = 3;
  // amount_per_bundle is the amount in ukyve the funder has funded per bundle
  uint64 amount_per_bundle = 4;
}

// EventDefundPool is an event emitted when a pool is defunded.
// emitted_by: MsgDefundPool
message EventDefundPool {
  // pool_id is the unique ID of the pool.
  uint64 pool_id = 1;
  // address is the account address of the pool funder.
  string address = 2;
  // amount is the amount in ukyve the funder has defunded
  uint64 amount = 3;
}
